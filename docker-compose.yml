services:
  db:
    build: ./db
    container_name: database
    shm_size: "8g"
    deploy:
      resources:
        limits:
          cpus: '4'
    environment:
      POSTGRES_DB: os_address_sampler
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/00-postgis.sql:/docker-entrypoint-initdb.d/00-postgis.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d os_address_sampler"]
      interval: 10s
      timeout: 5s
      retries: 20
    ports: ["5432:5432"]

  importer:
    build: ./db-importer
    container_name: gdal_importer
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./os-data:/data:ro

  api:
    build: ./api
    command: ["node", "dist/server.js"]
    env_file:
      - ./api/config/api/.env
    ports:
      - "3000:3000"
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    depends_on:
      importer:
        condition: service_completed_successfully
      redis:
        condition: service_started
      db:
        condition: service_healthy

  worker:
    build: ./api
    command: ["node", "dist/worker.js"]
    env_file:
      - ./api/config/worker/.env
    depends_on:
      importer:
        condition: service_completed_successfully
      redis:
        condition: service_started
      db:
        condition: service_healthy

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:8
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

volumes:
  pgdata:
  pgadmin_data:

